:- eval(test()).

test() :-
	println(["========== sparql_query test =========="]),
	sparql_connect(Connection, "http://grid.lzu.edu.cn:6060/openrdf-sesame/repositories/sswf"),
	println(["==> Connected."]),
	testSelectQuery(Connection),
	println(["==> SELECT query done."]),
	testAskQuery(Connection),
	println(["==> ASK query done."]),
	testUpdateQuery(Connection),
	println(["==> Update done."]),
	sparql_disconnect(Connection),
	println(["==> Disconnected."]).
   
testSelectQuery(Connection) :-
	QueryString = '
        PREFIX : <http://www.corporate-semantic-web.de/sswf2013#>
		PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
		SELECT ?agent WHERE{
		    ?role :responsible ?task . 
		    ?agent :hasRole ?role .
		    ?agent :available "false"^^xsd:boolean .
		    ?agent :priority ?priority .
		    FILTER regex(str(?task), "add")
		    }
			ORDER BY DESC (?priority)
			LIMIT 1
		',
	sparql_select(Connection, QueryString, QueryId),
	sparql_results(QueryId, Agent),
	println([QueryId,": ", Agent], "  "),
	fail().
testSelectQuery(_):-
    println(["No result"]).
	
testAskQuery(Connection) :-
	QueryString = '
	    PREFIX : <http://www.corporate-semantic-web.de/sswf2013#>
		PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
		ASK WHERE {
			:add rdf:type :Task .
		}
	',
	sparql_ask(Connection, QueryString, QueryId1),
	sparql_results(QueryId1),
	println(['yes']),
	fail().
testAskQuery(_).

testUpdateQuery(Connection) :-
	QueryString = '
	    PREFIX : <http://www.corporate-semantic-web.de/sswf2013#>
		PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
		DELETE DATA {:calculateAgent :available  "false"^^xsd:boolean};
        INSERT DATA {:calculateAgent :available  "true"^^xsd:boolean}
	',
	sparql_update(Connection, QueryString, "http://www.corporate-semantic-web.de/sswf2013#", UpdateId),
	sparql_results(UpdateId),
	fail().
	
testUpdateQuery(_).
