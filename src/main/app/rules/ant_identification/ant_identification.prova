%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% The Super Organizational Agent
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Import external rules/ContractLog libraries for
% mathematical, lists and date / time computations
% and access to external data sources, e.g.
% Semantic Web ontologies, iCal Calendars etc.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


:-eval(consult('../swf_engine/list.prova')).
:-eval(consult('../swf_engine/utils.prova')).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Performative vocabulary of organizational agent
% More complex vocabularies (e.g. FIPA ACL) might be defined as Semantic Web ontologies	
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
performative(request):-performative(query).
performative(start).
performative(query).

performative(XID,Performative):-
   performative(Performative).

rcvMsg(XID,esb, From, Performative, antIdentification(Parameters, X)) :-
	understandPerformative(XID, From, Performative, antIdentification(Parameters, X)),
	processMessage(XID, From, Performative, antIdentification(Parameters, X)).
rcvMsg(XID,esb, From, Performative, antIdentification(Parameters, X)) :-
	understandPerformative(XID, From, Performative, antIdentification(Parameters, X)),
	rcvMsg(XID,esb,Agent,no_further_answers, Payload),
	sendMsg(XID,esb,From,no_further_answers,antIdentification(Parameters, X)),
	println(["--------------------------------------------"]), 
	println(["                 COMPLETE                   "]), 
	println(["--------------------------------------------"]).
		
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% rules for processing the message
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%	
	
% try to understand the performative of the message
understandPerformative(XID, From, "answer", PayLoad) :- !, fail().
understandPerformative(XID, From, "end_of_transmission", PayLoad) :- !, fail().
understandPerformative(XID, From, "no_further_answers", PayLoad) :- !,fail().  	
understandPerformative(XID, From, Performative, PayLoad) :-
	performative(Performative).
understandPerformative(XID, From, Performative, PayLoad) :-
	not(performative(Performative)),
	sendMsg(XID,esb,From,"answer", notUnderstood("performative",Performative)),
	sendMsg(XID,esb,From,"no_further_answers", PayLoad),
	fail().
	
processMessage(XID,From,Primitive, antIdentification(Parameters, X)):-
     antIdentification(X, Parameters),
     treatment(X, Treatment),
     sendMsg(XID,esb,From, "answer", antIdentification(Treatment)).

treatment(argentineAnt, "http://en.wikipedia.org/wiki/Argentine_ant").
treatment(failed, failed).

antIdentification(X, [Nest, Node, Color, Thorax, Seg, Club, Des, HColor, S, Worker, Length, Food, Location]) :-
   bodyFeature(X, Node, Color, Thorax, Seg, Club, Des, HColor, S, Worker, Length),
   nest(X,Nest),
   food(X, Food),
   !.
   
antIdentification(X, [Nest, Node, Color, Thorax, Seg, Club, Des, HColor, S, Worker, Long, Food, Location]) :-
   X = "failed".

% facts
node(argentineAnt, one).
node(littleBlackAnt, two).

color(argentineAnt, lightbrown).
color(littleBlackAnt, black).

thorax(argentineAnt, uneven).
thorax(littleBlackAnt, uneven).

antennae(argentineAnt,twelve,zero).
antennae(littleBlackAnt,twelve,three).

hair(argentineAnt, sparse, _).
hair(littleBlackAnt, _, _).

stinger(argentineAnt, no).
stinger(littleBlackAnt, indeterminate).

worker(argentineAnt, monomorphic).
worker(littleBlackAnt, monomorphic).

length1(argentineAnt, 0.125,0.125).
length1(littleBlackAnt, 0.0625,0.0625).

nest(argentineAnt, moist).
nest(littleBlackAnt, fineSoil).

food(argentineAnt, sugars).
food(argentineAnt, proteins).
food(littleBlackAnt, grease).
food(littleBlackAnt, vegetables).
food(littleBlackAnt, insects).

% rules

bodyFeature(X, Node, Color, Thorax, Seg, Club, Des, HColor, S, Worker, Length) :-
   node(X, Node),
   color(X, Color),
   thorax(X, Thorax),
   antennae(X, Seg, Club),
   hair(X, Des, HColor),
   stinger(X, S),
   worker(X, Worker),
   length1(X, Min1, Max1),
   Length >= Min1,
   Max1 <= Length.